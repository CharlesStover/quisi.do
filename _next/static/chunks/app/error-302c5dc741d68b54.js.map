{"version":3,"file":"static/chunks/app/error-302c5dc741d68b54.js","mappings":"+EAAA,uCAAwG,6GCyBxG,MAAeA,CAAAA,EAAAA,EAAAA,EAAAA,CAAe,CAd9B,SAAAC,CAAA,GAc4C,CAAC,EAdcC,EAAAC,EAAA,EAGjC,EAIU,EACJ,EACgB,IAThDC,CAAA,CAAAC,CAAAA,EAAAA,EAAAA,CAAAA,CAAA,KAAuB,OAAAC,CAAA,aAAAC,CAAA,OAAAC,CAAAA,CAAA,CAAAC,EAUb,OAViDL,CAAA,MAAAG,GAAAH,CAAA,MAAAE,CAAA,EAC/CJ,EAD+C,CAC/C,IACRK,EAAYD,EAAM,EACjBH,CADgB,CAAC,CAChBG,EADS,EACS,CAAb,CAAc,IAAAC,EAAAH,CAAA,IAAAE,EAAAF,CAAA,IAAAF,EAAA,KAAAC,EAAA,EAAAD,EAAA,KAAAC,EAAA,MAFvBO,CAAAA,EAAAA,EAAAA,SAAAA,CAAA,CAAUR,EAEPC,EAAoB,CAAC,OAAAQ,MAAA,CAAAC,GAAA,+BAIpBC,EAAA,YAA8B,aAA1B,qBAAqB,EAAzB,GAA8BT,CAAA,IAAAS,EAAA,CAAAA,EAAA,KAAAT,CAAA,MAAAE,EAAAQ,GAAA,MAC9BC,EAAA,aAA0B,CAApB,YAAAT,EAAKQ,GAAA,OAAeV,CAAA,IAAAE,EAAAQ,GAAA,KAAAV,CAAA,IAAAW,EAAA,CAAAA,EAAA,KAAAX,CAAA,MAAAI,GAC1BQ,EAD0B,CAC1B,eAA0C,IAAzBR,OAAK,CAALA,KAAK,MAAE,SAAS,EAAjC,GAA0CJ,CAAA,IAAAI,EAAAJ,CAAA,IAAAY,EAAA,CAAAA,EAAA,KAAAZ,CAAA,MAAAW,EAAA,CAAAX,CAAA,OAAAY,EAAA,CAH5CC,EAAA,cAIM,CAHJ,aAAAJ,EAA8B,CAC9B,CAA0B,CAC1B,CAA0C,GACtCT,CAAA,IAAAW,EAAA,MAAAC,EAAA,MAAAC,EAAA,CAAAA,EAAA,MAJNA,CAIM,yGCnBV,IAAMC,EAAgBC,CAAAA,EAAAA,EAAAA,aAAAA,CAAa,CAAC,IAAI,CAAC,CCG1B,SAASC,EAAcA,CAA6C,EAAE,IAA5CC,KAAHD,KAAW,IAAEE,CAAE,QAAEC,CAAM,SAAEC,CAAO,CAAE,GAAGC,EAAAA,CAApC,EAC7BC,EAASC,CAAAA,EAAAA,CAAH,CAAGA,OAAAA,CAAO,CAAC,IAAM,IAAIC,EAAAA,EAAM,CAACN,EAAE,EAAWC,EAAQE,GAAV,CAAQ,EAAQ,CAAC,CAAa,EAAUD,EAAQ,CAAC,CACpG,GADkG,GAC1FK,CAAAA,EAAAA,EAAAA,GAAAA,CAAI,CAACX,EAAcY,KAAD,GAAS,CAAE,CAAEC,KAAK,CAAEL,EAAQL,IAAF,IAAU,CAAEA,CAAS,CAAC,CAAC,CILhE,SAASW,IACpB,IAAMN,EAASO,CAAAA,EAAAA,CAAH,CAAGA,MADcD,CAAA,EAAG,CACjBC,CAAU,CLAdf,GKCX,GAAe,CADwB,CAAC,EACrB,EAAE,CAAjBQ,EACA,IADM,EACA,KAAS,CAAC,8CAA8C,CAAC,CAEnE,OAAOA,CACX,CELe,IFIE,KEJO1B,EAAgBkC,CAAS,EAAE,OACxC,GAD4BlC,MACnBmC,CAAqB,EAAE,IAC7BC,EAASJ,IAAH,EACQK,CAAAA,EAAAA,EAAAA,IAAH,MADO,CAAC,CAAC,CACK,GAAK,CAChCD,EAAO7B,CAD8B,GAC/B,OAAY,CAAC+B,EACvB,CAAC,CAD0B,CACvBF,EAAO,CAAC,CACZ,EADU,IACHP,CAAAA,EAAAA,EAAAA,GAAAA,CAAI,CAACK,EAAW,CAAE,GAAGK,CAAK,CAAEhC,CAAd,UAAyB,CAAEA,CAAY,CAAC,CAAC,CACjE,CERU,SAASiC,IACpB,IAAMd,EAASM,IADmBQ,CAAA,EAAG,GAE9BH,CAAAA,EAAAA,EAAAA,MADiB,CAAC,CAAC,GACnBA,CAAW,CAAC,CAAC,4DAAGI,CAAM,GAAK,cAC9Bf,EAAOgB,IAAD,OAAY,CAAC,GAAGD,EAC1B,CAAC,CAAE,CAACf,CAD4B,CAAC,CACrB,GAAF","sources":["webpack://_N_E/?0b10","webpack://_N_E/./src/app/error.tsx","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/contexts/aws-rum.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/components/aws-rum-provider/aws-rum-provider.view.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/components/aws-rum-provider/index.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/components/mock-aws-rum-provider/mock-aws-rum-provider.view.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/components/mock-aws-rum-provider/index.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/hooks/use-aws-rum.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/hocs/with-aws-rum.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/hocs/with-record-error.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/hooks/use-record-error.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/hooks/use-record-event.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/hooks/use-record-page-view.js","webpack://_N_E/../../.yarn/__virtual__/aws-rum-react-virtual-7595988d21/1/packages/aws-rum-react/dist/index.js"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/home/runner/work/quisi.do/quisi.do/packages/next/src/app/error.tsx\");\n","'use client'; // Error components must be Client Components\n\nimport { withRecordError } from 'aws-rum-react';\nimport { type ReactElement, useEffect } from 'react';\n\ninterface Props {\n  readonly error: Error;\n  readonly recordError: (error: unknown) => void;\n  readonly reset: VoidFunction;\n}\n\nfunction ErrorBoundary({ error, recordError, reset }: Props): ReactElement {\n  useEffect((): void => {\n    recordError(error);\n  }, [error, recordError]);\n\n  return (\n    <div>\n      <h2>Something went wrong!</h2>\n      <pre>{error.message}</pre>\n      <button onClick={reset}>Try again</button>\n    </div>\n  );\n}\n\nexport default withRecordError(ErrorBoundary);\n","'use client';\nimport { createContext } from 'react';\nconst AwsRumContext = createContext(null);\nexport default AwsRumContext;\n//# sourceMappingURL=aws-rum.js.map","'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { AwsRum } from 'aws-rum-web';\nimport { useMemo } from 'react';\nimport AwsRumContext from '../../contexts/aws-rum.js';\nexport default function AwsRumProvider({ children, id, region, version, ...config }) {\n    const client = useMemo(() => new AwsRum(id, version, region, config), [config, id, region, version]);\n    return (_jsx(AwsRumContext.Provider, { value: client, children: children }));\n}\n//# sourceMappingURL=aws-rum-provider.view.js.map","export { default } from './aws-rum-provider.view.js';\n//# sourceMappingURL=index.js.map","'use client';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { AwsRum } from 'aws-rum-web';\nimport { useMemo, useRef } from 'react';\nimport AwsRumContext from '../../contexts/aws-rum.js';\nimport mapRefToFunction from '../../utils/map-ref-to-function.js';\nimport noop from '../../utils/noop.js';\nexport default function MockAwsRumProvider({ addPlugin = noop, addSessionAttributes = noop, allowCookies = noop, children, disable = noop, dispatch = noop, dispatchBeacon = noop, enable = noop, recordError = noop, recordEvent = noop, recordPageView = noop, registerDomEvents = noop, setAwsCredentials = noop, }) {\n    const addPluginRef = useRef(addPlugin);\n    const disableRef = useRef(disable);\n    const dispatchRef = useRef(dispatch);\n    const enableRef = useRef(enable);\n    const addSessionAttributesRef = useRef(addSessionAttributes);\n    const allowCookiesRef = useRef(allowCookies);\n    const dispatchBeaconRef = useRef(dispatchBeacon);\n    const registerDomEventsRef = useRef(registerDomEvents);\n    const recordErrorRef = useRef(recordError);\n    const recordEventRef = useRef(recordEvent);\n    const recordPageViewRef = useRef(recordPageView);\n    const setAwsCredentialsRef = useRef(setAwsCredentials);\n    addPluginRef.current = addPlugin;\n    addSessionAttributesRef.current = addSessionAttributes;\n    allowCookiesRef.current = allowCookies;\n    disableRef.current = disable;\n    dispatchBeaconRef.current = dispatchBeacon;\n    dispatchRef.current = dispatch;\n    enableRef.current = enable;\n    recordErrorRef.current = recordError;\n    recordEventRef.current = recordEvent;\n    recordPageViewRef.current = recordPageView;\n    registerDomEventsRef.current = registerDomEvents;\n    setAwsCredentialsRef.current = setAwsCredentials;\n    const client = useMemo(() => {\n        const newClient = {\n            addSessionAttributes: mapRefToFunction(addSessionAttributesRef),\n            addPlugin: mapRefToFunction(addPluginRef),\n            allowCookies: mapRefToFunction(allowCookiesRef),\n            disable: mapRefToFunction(disableRef),\n            dispatch: mapRefToFunction(dispatchRef),\n            dispatchBeacon: mapRefToFunction(dispatchBeaconRef),\n            enable: mapRefToFunction(enableRef),\n            recordError: mapRefToFunction(recordErrorRef),\n            recordEvent: mapRefToFunction(recordEventRef),\n            recordPageView: mapRefToFunction(recordPageViewRef),\n            registerDomEvents: mapRefToFunction(registerDomEventsRef),\n            setAwsCredentials: mapRefToFunction(setAwsCredentialsRef),\n        };\n        Object.setPrototypeOf(newClient, AwsRum.prototype);\n        return newClient;\n    }, []);\n    return (_jsx(AwsRumContext.Provider, { value: client, children: children }));\n}\n//# sourceMappingURL=mock-aws-rum-provider.view.js.map","export { default } from './mock-aws-rum-provider.view.js';\n//# sourceMappingURL=index.js.map","import { useContext } from 'react';\nimport AwsRumContext from '../contexts/aws-rum.js';\nexport default function useAwsRum() {\n    const client = useContext(AwsRumContext);\n    if (client === null) {\n        throw new Error('Expected the AWS RUM context to be provided.');\n    }\n    return client;\n}\n//# sourceMappingURL=use-aws-rum.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport useAwsRum from '../hooks/use-aws-rum.js';\nexport default function withAwsRum(Component) {\n    return function AwsRumComponent(props) {\n        const awsRum = useAwsRum();\n        return _jsx(Component, { ...props, awsRum: awsRum });\n    };\n}\n//# sourceMappingURL=with-aws-rum.js.map","import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { useCallback } from 'react';\nimport useAwsRum from '../hooks/use-aws-rum.js';\nexport default function withRecordError(Component) {\n    return function AwsRumComponent(props) {\n        const awsRum = useAwsRum();\n        const recordError = useCallback((err) => {\n            awsRum.recordError(err);\n        }, [awsRum]);\n        return _jsx(Component, { ...props, recordError: recordError });\n    };\n}\n//# sourceMappingURL=with-record-error.js.map","import { useCallback } from 'react';\nimport useAwsRum from './use-aws-rum.js';\nexport default function useRecordError() {\n    const client = useAwsRum();\n    return useCallback((...params) => {\n        client.recordError(...params);\n    }, [client]);\n}\n//# sourceMappingURL=use-record-error.js.map","import { useCallback } from 'react';\nimport useAwsRum from './use-aws-rum.js';\nexport default function useRecordEvent() {\n    const client = useAwsRum();\n    return useCallback((...params) => {\n        client.recordEvent(...params);\n    }, [client]);\n}\n//# sourceMappingURL=use-record-event.js.map","import { useCallback } from 'react';\nimport useAwsRum from './use-aws-rum.js';\nexport default function useRecordPageView() {\n    const client = useAwsRum();\n    return useCallback((...params) => {\n        client.recordPageView(...params);\n    }, [client]);\n}\n//# sourceMappingURL=use-record-page-view.js.map","export { default as AwsRumProvider } from './components/aws-rum-provider/index.js';\nexport { default as MockAwsRumProvider } from './components/mock-aws-rum-provider/index.js';\nexport { default as withAwsRum } from './hocs/with-aws-rum.js';\nexport { default as withRecordError } from './hocs/with-record-error.js';\nexport { default as useAwsRum } from './hooks/use-aws-rum.js';\nexport { default as useRecordError } from './hooks/use-record-error.js';\nexport { default as useRecordEvent } from './hooks/use-record-event.js';\nexport { default as useRecordPageView } from './hooks/use-record-page-view.js';\n//# sourceMappingURL=index.js.map"],"names":["withRecordError","ErrorBoundary","t1","t2","$","_c","error","recordError","reset","t0","useEffect","Symbol","for","t3","message","t4","t5","t6","AwsRumContext","createContext","AwsRumProvider","children","id","region","version","config","client","useMemo","AwsRum","_jsx","Provider","value","useAwsRum","useContext","Component","AwsRumComponent","awsRum","useCallback","err","props","useRecordEvent","params","recordEvent"],"sourceRoot":""}