name: Continuous deployment

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: ${{ matrix.language }}
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

  install:
    name: Install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install Yarn dependencies
        run: yarn install --immutable

  prepack:
    name: Prepack
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Prepack
        run: yarn prepack
        env:
          REACT_APP_GITHUB_REPOSITORY: ${{ github.repository }}
          REACT_APP_GITHUB_SHA: ${{ github.sha }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: prepack
          path: |
            packages/*/build/
            packages/*/dist/

  charlesstover-com:
    name: Prepublish CharlesStover.com
    needs: prepack
    services:
      datadog-agent:
        image: datadog/agent:latest
        env:
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
          DD_HOSTNAME: none
          DD_INSIDE_CI: true
        ports:
          - 8126:8126
    runs-on: ubuntu-latest
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: prepack
          path: packages/
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Enable Plug-n-Play `cypress`
        run: yarn cypress:pnp
        working-directory: packages/charlesstover.com
      - name: Install Cypress
        uses: cypress-io/github-action@v4
        with:
          install: false
          runTests: false
          working-directory: packages/charlesstover.com
      - name: Prepublish
        run: yarn run prepublish
        working-directory: packages/charlesstover.com
        env:
          BRANCHES_COVERAGE_THRESHOLD: 1
          CHOKIDAR_USEPOLLING: true
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          CYPRESS_SCREENSHOTS_SUBFOLDER: ${{ matrix.os }}-${{ matrix.browser }}
          DD_ENV: ci
          FUNCTIONS_COVERAGE_THRESHOLD: 1
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          LINES_COVERAGE_THRESHOLD: 1
          NYC_REPORT_DIR: cypress/coverage/${{ matrix.os }}-${{ matrix.browser }} # -${{ matrix.container }}
          REACT_APP_GITHUB_REPOSITORY: ${{ github.repository }}
          REACT_APP_GITHUB_SHA: ${{ github.sha }}
          STATEMENTS_COVERAGE_THRESHOLD: 1
      - name: Upload artifacts
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: charlesstover-com
          path: |
            packages/*/.nyc_output/
            packages/*/coverage/
            packages/*/cypress/coverage/
            packages/*/cypress/screenshots/
            packages/*/cypress/videos/
            packages/*/jest/coverage/
            packages/*/lighthouse.report.html
            packages/*/lighthouse.report.json

  npm:
    name: NPM
    needs: prepack
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: prepack
          path: packages/
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn run publish;
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: publish
          path: |
            packages/*/.nyc_output/
            packages/*/coverage/
            packages/*/cypress/coverage/
            packages/*/cypress/screenshots/
            packages/*/cypress/videos/
            packages/*/jest/
            packages/*/lighthouse.report.html
            packages/*/lighthouse.report.json

  github-packages:
    name: GitHub Packages
    needs: npm
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: prepack
          path: packages/
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@${{ github.repository_owner }}'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Publish
        env:
          NPM_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: >
          yarn config set npmAuthToken $NPM_AUTH_TOKEN;
          yarn config set \
            npmScopes.${{ github.repository_owner }}.npmPublishRegistry \
            'https://npm.pkg.github.com';
          yarn run publish;

  github-pages:
    name: GitHub Pages
    needs: charlesstover-com
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: prepack
          path: packages/
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages
          clean: true
          folder: packages/charlesstover.com/build/
          single-commit: true

  sentry-release:
    name: Sentry release
    needs: charlesstover-com
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: prepack
          path: packages/
      - name: Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_LOG_LEVEL: info
          SENTRY_ORG: charles-stover
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: build
          version: ${{ github.sha }}

  cloudflare-purge:
    name: Cloudflare purge
    needs: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Purge Cloudflare files
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: >
          curl \
            --data '{
              "files": [
                "https://charlesstover.com",
                "https://charlesstover.com/index.html"
              ]
            }' \
            --header "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            --header "Content-Type:application/json" \
            --request POST \
            "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache"
on:
  push:
    branches: [main]
  workflow_dispatch:
