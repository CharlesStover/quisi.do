name: charlesstover.com

jobs:
  install-yarn:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable

  build:
    needs: install-yarn
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Build
        run: yarn build
        env:
          # Ignore warnings from `mini-css-extract-plugin`.
          CI: false
          REACT_APP_GITHUB_REPOSITORY: ${{ github.repository }}
          REACT_APP_GITHUB_SHA: ${{ github.sha }}
      - name: Upload build
        uses: actions/upload-artifact@v2
        with:
          name: build
          path: build

  eslint:
    needs: install-yarn
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: ESLint
        run: yarn eslint

  install-cypress:
    needs: install-yarn
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Install Cypress
        uses: cypress-io/github-action@v2
        with:
          runTests: false
    strategy:
      matrix:
        os: [ubuntu] # windows

  jest:
    needs: install-yarn
    runs-on: ubuntu-latest
    services:
      datadog-agent:
        image: datadog/agent:latest
        env:
          DD_API_KEY: ${{ secrets.DATADOG_API_KEY }}
          DD_HOSTNAME: none
          DD_INSIDE_CI: true
        ports:
          - 8126:8126
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn install --immutable
      - name: Jest
        run: yarn jest
        env:
          DD_ENV: ci
      - name: Upload coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: jest--coverage
          path: jest/coverage

  cypress:
    needs: install-cypress
    runs-on: ${{ matrix.os }}-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: yarn
          check-latest: true
          node-version: 'lts/*'
      - name: End-to-end test
        uses: cypress-io/github-action@v2
        env:
          CHOKIDAR_USEPOLLING: true
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NYC_REPORT_DIR: cypress/coverage/${{ matrix.os }}-${{ matrix.browser }}-${{ matrix.container }}
          REACT_APP_GITHUB_REPOSITORY: ${{ github.repository }}
          REACT_APP_GITHUB_SHA: ${{ github.sha }}
        with:
          browser: ${{ matrix.browser }}
          ci-build-id: ${{ github.run_id }}-${{ github.run_attempt }}
          command-prefix: yarn dlx
          group: ${{ matrix.os }}-${{ matrix.browser }}
          parallel: true
          record: true
          start: yarn cypress:start
          tag: ${{ github.event_name }}
          wait-on: 'http://localhost:3000/'
          wait-on-timeout: 120
      - name: Upload coverage
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress--coverage
          path: cypress/coverage
      - name: Upload screenshots
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress--screenshots
          path: cypress/screenshots
      - name: Upload videos
        if: ${{ always() }}
        uses: actions/upload-artifact@v2
        with:
          name: cypress--videos
          path: cypress/videos
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu] # , windows
        browser: [edge, firefox, chrome]
        container: [1, 2, 3]
        exclude:
          - browser: edge
            os: ubuntu

  # coverage:
  #   if: ${{ always() }}
  #   needs: [cypress, jest]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Setup Node
  #       uses: actions/setup-node@v2
  #       with:
  #         cache: yarn
  #         check-latest: true
  #         node-version: 'lts/*'
  #     - name: Install dependencies
  #       run: yarn install --immutable
  #     - name: Download Cypress coverage
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: cypress--coverage
  #         path: cypress/coverage
  #     - name: Download Jest coverage
  #       uses: actions/download-artifact@v2
  #       with:
  #         name: jest--coverage
  #         path: jest/coverage
  #     - name: Report coverage
  #       run: yarn coverage
  #       env:
  #         BRANCHES_COVERAGE_THRESHOLD: 1
  #         FUNCTIONS_COVERAGE_THRESHOLD: 1
  #         LINES_COVERAGE_THRESHOLD: 1
  #         STATEMENTS_COVERAGE_THRESHOLD: 1
  #     - name: Upload coverage
  #       if: ${{ always() }}
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: coverage
  #         path: |
  #           .nyc_output
  #           coverage

  github-pages:
    if: ${{ github.event_name == 'push' }}
    needs: [build, cypress, eslint, jest]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Deploy
        uses: JamesIves/github-pages-deploy-action@4.1.5
        with:
          branch: gh-pages
          clean: true
          folder: build
          single-commit: true

  sentry-release:
    if: ${{ github.event_name == 'push' }}
    needs: [build, cypress, eslint, jest]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_LOG_LEVEL: info
          SENTRY_ORG: charles-stover
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: build
          version: ${{ github.sha }}

  cloudflare-purge:
    if: ${{ github.event_name == 'push' }}
    needs: github-pages
    runs-on: ubuntu-latest
    steps:
      - name: Purge Cloudflare files
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ZONE_ID: ${{ secrets.CLOUDFLARE_ZONE_ID }}
        run: >
          curl \
            --data '{
              "files": [
                "https://charlesstover.com",
                "https://charlesstover.com/index.html"
              ]
            }' \
            --header "Authorization: Bearer $CLOUDFLARE_API_TOKEN" \
            --header "Content-Type:application/json" \
            --request POST \
            "https://api.cloudflare.com/client/v4/zones/$CLOUDFLARE_ZONE_ID/purge_cache"

on:
  pull_request:
  push:
    branches: [main]
