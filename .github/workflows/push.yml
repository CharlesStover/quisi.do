name: Push

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn

  cypress:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cypress
        uses: cypress-io/github-action@v2
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          command: yarn cypress
          install-command: yarn
          record: true
          start: yarn start
          tag: ${{ github.event_name }}
          wait-on: 'http://localhost:3000'

  eslint:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn
      - name: ESLint
        run: yarn eslint

  jest:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn
      - name: Jest
        run: yarn jest

  build:
    needs: [cypress, eslint, jest]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node
        uses: actions/setup-node@v2
        with:
          cache: 'yarn'
          check-latest: true
          node-version: 'lts/*'
      - name: Install dependencies
        run: yarn
      - name: Set version
        run: echo "REACT_APP_VERSION=$(yarn get-version)" >> $GITHUB_ENV
      - name: Build
        run: yarn build
        env:
          # Ignore warnings from `mini-css-extract-plugin`.
          CI: false
          REACT_APP_GITHUB_REPOSITORY: ${{ github.repository }}
          REACT_APP_GITHUB_SERVER_URL: ${{ env.GITHUB_SERVER_URL }}
          REACT_APP_GITHUB_SHA: ${{ github.sha }}
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          if-no-files-found: error
          name: build
          path: build

  sentry-release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Sentry release
        uses: getsentry/action-release@v1
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          sourcemaps: build

on:
  push:
    branches: [main]
